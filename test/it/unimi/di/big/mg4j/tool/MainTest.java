package it.unimi.di.big.mg4j.tool;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.FileInputStream;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.apache.commons.io.filefilter.FileFilterUtils;

public class MainTest {
@SuppressWarnings("resource")
@org.junit.Test
public void testMain() throws Throwable {

final String basename = File.createTempFile( MainTest.class.getSimpleName(), "test" ).getCanonicalPath();
it.unimi.dsi.fastutil.io.BinIO.storeObject( new it.unimi.di.big.mg4j.document.TestDocumentCollection(), basename + ".collection" );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class ZipDocumentCollectionBuilder -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class ZipDocumentCollectionBuilder -S " + basename + ".collection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class ZipDocumentCollectionBuilder -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class ZipDocumentCollectionBuilder -S " + basename + ".collection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class SimpleCompressedDocumentCollectionBuilder -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class SimpleCompressedDocumentCollectionBuilder -S " + basename + ".collection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class SimpleCompressedDocumentCollectionBuilder -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class SimpleCompressedDocumentCollectionBuilder -S " + basename + ".collection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class ZipDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built -e --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt -e --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-built  --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "-B " + basename + "-rebuilt  --builder-class SimpleCompressedDocumentCollectionBuilder -oit.unimi.di.big.mg4j.document.TestDocumentCollection(true) " + basename + "2" ).split("[ ]+") );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.pointers" ), new FileInputStream( basename + "2-text.pointers" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.counts" ), new FileInputStream( basename + "2-text.counts" ) ) );
assertTrue( IOUtils.contentEquals( new FileInputStream( basename + "-text.positions" ), new FileInputStream( basename + "2-text.positions" ) ) );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor   -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor   -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor   -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1    -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1    -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1    -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2    -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2    -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2    -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10    -Q1   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q1   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10    -Q8   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q8   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10    -Q16   -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text   -Q16   " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --high-performance -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --high-performance -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q-1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q1 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q2 -H0  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H0  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q-1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q1 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q2 -H1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H1  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q-1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q-1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q1 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q1 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved -Q2 -H10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved -Q2 -H10  " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tNullTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tNullTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tNullTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tNullTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1 -tDowncaseTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2 -tDowncaseTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10 -tDowncaseTermProcessor  --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10 -tDowncaseTermProcessor -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s1   --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s1  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s2   --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s2  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.IndexBuilder.main( ( "--combine-buffer-size 1K -s10   --interleaved   --no-skips -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Scan.main( ( "-s10  -S " + basename + ".collection " + basename + "" ).split("[ ]+") );
it.unimi.di.big.mg4j.tool.Combine.main( ( "-b 1K -p " + basename + "-text  --interleaved   --no-skips " + basename + "-text" ).split("[ ]+") );
it.unimi.di.big.mg4j.test.Verifier.main( ( "-R -S " + basename + ".collection " + basename + "-text" ).split("[ ]+") );
for ( Object f : FileUtils.listFiles( new File( basename ).getParentFile(), FileFilterUtils.prefixFileFilter( IndexTest.class.getSimpleName() ), null ) ) ( (File)f ).delete();
}
}
